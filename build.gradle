plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '21.0-stable'
}

version = '1.0.0'
group = 'com.tlum.allofthemtransport'
archivesBaseName = 'allofthemtransport'

mod_id = 'allofthemtransport'
mod_name = 'All of Them â€” Transport'
mod_license = 'MIT'
mod_version = '1.0.0'
mod_authors = 'Tlum'
mod_description = 'A transport mod for the "All of Them" modpack.'

minecraft_version = '1.21'
minecraft_version_range = '[1.21,)'
neo_version = '21.0-stable'
neo_version_range = '[21.0-stable,)'
loader_version_range = '[1.21-47.0.163,)'

tasks.named('wrapper', Wrapper).configure {
    distributionType = Wrapper.DistributionType.BIN
}

repositories {
    mavenLocal()
}

base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

runs {
    configureEach {
        systemProperty 'forge.logging.markers', 'REGISTRIES'
        systemProperty 'forge.logging.console.level', 'debug'
    }

    client {
        workingDirectory project.file('run')
        property 'forge.enabledGameTestNamespaces', mod_id
        mods {
            examplemod {
                source sourceSets.main
            }
        }
    }

    server {
        workingDirectory project.file('run')
        property 'forge.enabledGameTestNamespaces', mod_id
        mods {
            examplemod {
                source sourceSets.main
            }
        }
    }

    gameTestServer {
        systemProperty 'forge.enabledGameTestNamespaces', mod_id
    }

    data {
        programArguments.addAll '--mod', mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

configurations {
    runtimeClasspath.extendsFrom localRuntime
}

dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version      : minecraft_version,
            minecraft_version_range: minecraft_version_range,
            neo_version            : neo_version,
            neo_version_range      : neo_version_range,
            loader_version_range   : loader_version_range,
            mod_id                 : mod_id,
            mod_name               : mod_name,
            mod_license            : mod_license,
            mod_version            : mod_version,
            mod_authors            : mod_authors,
            mod_description        : mod_description
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/neoforge.mods.toml']) {
        expand replaceProperties
    }
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/repo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}